#spring.kafka.consumer.bootstrap-servers is used to configure the kafka brokers. If you have multiple brokers then you have to configure
#then using , as delimiter
spring.kafka.consumer.bootstrap-servers: localhost:9092  

#spring.kafka.consumer.group-id is the consumer groupid where the consumer belongs to
spring.kafka.consumer.group-id: myGroup

#spring.kafka.consumer.auto-offset-reset specifies what to do when there is no offset in the topic.
#earliest will reset the offset to earliest offset
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer:  org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer:  org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
